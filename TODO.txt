TODO list
----------

EPICS
-----
[] Refactor: partner accounts user flow
    should only see partner account details and successfully imported meeting info

[] Refactor: call transcription flow

[] Fireflies Auth

[] chatgpt integration

[] all functionality working before moving forward

[] styling


TASKS
-----

Nitesh to work on:
  [] Fireflies Auth 
    [] saving API key to db against user
    [] update API key & save against user
    [] delete API key against user
  
  [] chatgpt integration
    [] you'll need the inputs to parse for the API call


General TODO list:
  Integrations > Fireflies
    [] fireflies integration page
      [] pass API key to input box
      [] need to encrypt fireflies auth input
      [] store API key in user table db
      [] connect button will only test the API request
      [] add button to import transcript data
      Popout modals:
          [] fireflies API
          [] data import successful
      [] after importing, take user to call transcriptions


  Call Transcripts User Flow
  [x] make sure firelfies API is working in dev
  [x] connect import button to selected imports
    [x] assign associated partner account to signify row item is to been imported

  [x] get basic frontend flow working
  [x] remove flow from partner accounts page
  [] add popup to display import error
    [x] on successful import, route user to imported transript page
      [x] GET call transcript info & summary based on transcript id. We wont need to store the raw transript, only the parsed data from ChatGPT
      [x] show transcript details in header table
      [x] assign maturity map or influence indicator
        [] create list of maturity map phases - this will be a static list of phases to be selected by user and parsed to chatgpt API request
        [] create dummy list of influence indicators i.e. commbank, westpac, etc
        [] note list of influence indicator phases
            Note: MM or II assignment will take place before sending raw text to chatgpt for parsing
      [] Create "get capability data" action - this will trigger response from OpenAI API
        [] Need to write chatGPT request to parse transcript data - general request plus either maturity map or influence indicator and related phase
        [] need to send list of speakers to chatGPT along with transcript text
          [] testing: return successful response from OpenAI in frontend
        [] parsed transcript data should be listed based on capabilty and associated phase
      [] user will be able to save parsed transcript data to partner account
  [] user to view transcript data in partner accounts page


Error handling:
- partner-account[accountId] - handle error UI for incorrect acccount id
- consider using Image instead of img for nextjs warnings


TYPES:
[] set types for all data objects - in progress
[] check typesafety before moving to prod



NITESH TICKETS
-------

Fireflies AUTH:
----------
Auth storage, import, and save to db

Outcome: work on storing & retrieving API keys safely

[] how to temporarily store keys entered by user - in-prog
[] get front end to work with keys
[] button to store and retrieve "edit API key"


-- Fireflies API Key Button action: --
Saves api key on connect

you can then update or delete your api key

edit button greyed out if no api key is stored.  
- clicking edit button will open a modal to update or remove api key

once testing is complete
â€¢	Ensure secure storage of the API key, such as saving it encrypted in your database or session management system.


ChatGPT Integration:
--------------------

influence indicator (refers to a potential sales deal with a company)
> list of influence indicators:
> 1. WestPac
> 2. Commbank
> 3. ANZ
> 4. BNZ
>> for the influence indicator selected, you then pass a list of phases:
  think of a phase like a check point in the sales cycle

  (see screenshot) this is a phase list of influence indicators 
    - so lets say you select WestPac as an influence indicator ( this should be a static list of companies for dev purposes i.e. banks for which we have sales deals in the pipeline)
    - you then parse that influence indicator ( aka company name) along with the list of phases to chatGPT in order to get the response you want
    Here's the template for the request:


    If (Influence Indicator) {
      OpenAPIRequest: {
      "You are a sales professional working in the B2B partnerships industry.
      Your task is to analyse this call transcript to identify success factors related to a specific phase of the sales deal with  {pass in "influence indicator aka company name"}.
      Your analysis of this call transcript data must be categorised into the following phases:
      List of phases for influence indicator:
        Partner Lead Researching
        Partner Lead Cultivating
        Partner Opportunity Alignment
        Prove Partner Value
        Partner Opportunity Negoti ation
        Partner Opportunity Closed

      Return your response in .json format with the following key-value pairs:
        - phase_name: the phase of the sales deal
        - description: a description of what was discussed related to the specific phase"
      }
    }

    If (Maturity Map) {

      OpenAPIRequest: {
      "You are a sales professional working in the B2B partnerships industry.
      Your task is to analyse this call transcript to identify success factors related to a specific phase of the partnership with {pass in Partner Account Name}.
      Your analysis of this call transcript data must be categorised into the following phases:
      List of phases for Maturity Map:
          Partner Qualification
          Joint Discovery
          Build Go-To-Market
          Sales Planning
          Delivery Readiness
          Partnership Launch
          Partnership Continous Improvement

      Return your response in json format with the following key-value pairs:
        - phase_name: the phase of the partnership
        - description: a description of what was discussed related to the specific phase"
      }
    }

