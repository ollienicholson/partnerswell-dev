// use @@index[column] to sort by index 

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

enum Role {
    ADMIN
    GUEST
}

model userRoles {
    clerkId      String  @unique
    role         Role
    firefliesApi String?

    @@index([clerkId, role])
}

// need to implement soft delete before delivery
model PartnerAccount {
    partnerAccountId Int                  @id @default(autoincrement())
    accountName      String
    contactName      String
    createdBy        String?
    createdAt        DateTime             @default(now())
    updatedAt        DateTime             @updatedAt
    transcripts      CallTranscriptData[] // one-to-many

    @@index([partnerAccountId])
}

// need to implement soft delete before delivery
model CallTranscriptData {
    id                  Int            @id @default(autoincrement())
    callTranscriptId    String         @unique
    callTranscriptTitle String
    createdAt           DateTime       @default(now())
    duration            Int // in minutes
    meetingDate         String
    speakers            Json // List of Speakers [{ name: String }]
    summary             Json
    sentences           Json // // List of Sentences [{ speaker_name: String, raw_text: String }]
    partnerAccount      PartnerAccount @relation(fields: [accountId], references: [partnerAccountId], onDelete: Cascade)
    accountId           Int // Partner Account FK

    @@index([id])
}
